@import "syntax-variables";

//
// this block styles the *editor*
//
:host {
    background-color: @syntax-background-color;
    color: @syntax-text-color;

    .is-focused .selection .region {
        background-color: @syntax-selection-color;
        font-style: bold;
    }

  .wrap-guide {
    background-color: @syntax-wrap-guide-color;
  }

  .indent-guide {
    color: @syntax-indent-guide-color;
  }

  .invisible-character {
    color: @syntax-invisible-character-color;
  }

  .cursor-line {
  }

  .gutter {
    background-color: @syntax-gutter-background-color;
    color: @syntax-gutter-text-color;

    .line-number {
    color: @syntax-gutter-text-color;
      &.cursor-line {
        background-color: @syntax-gutter-background-color-selected;
        color: @syntax-gutter-text-color-selected;
      }
    }
  }

 .atom-text-editor[mini] .scroll-view {
      padding-left: 1px;
  }

  .gutter .line-number.folded,
  .gutter .line-number:after,
  .fold-marker:after {
    color: @light-gray;
  }

  .invisible {
    color: @syntax-text-color;
  }

  .cursor {
    color: @syntax-cursor-color;
  }

  .selection .region {
    background-color: @syntax-selection-color;
  }

  .search-results .marker.current-result .region {
      border: 1px solid @syntax-result-marker-color-selected;
  }
}

atom-text-editor::shadow {
    .find-result .region {
        background-color: fade(@syntax-result-marker-color, 40%);
        border: 1px solid @syntax-result-marker-color;
    }

    .current-result .region {
        background-color: fade(@syntax-result-marker-color-selected, 30%);
        border: 1px solid @syntax-result-marker-color-selected;
    }
}

//
// everything after this point styles the *syntax*
//

.meta.structure.dictionary.json {
    & > .string.quoted.json {
        color: @light-orange;

        & > .punctuation.definition.string {
            color: @light-orange;
        }
    }

    & > .value.json > .string.json {
        color: @string;

        & > .punctuation.definition.string {
            color: @string;
        }
    }
}

.comment {
  color: @comment;
  font-style: italic;
  font-weight: bold;
}

.keyword {
  color: @keyword;

  &.operator {
    color: @syntax-text-color;

    &.new {
      color: magenta;
    }
  }

  &.definition {
      color: @light-orange;
  }

  &.other.special-method {
    color: magenta;
  }

  &.other.unit {
    color: lighten(@blue, 15%);
  }
}

.storage {
  color: @dark-orange;

  &.type {
    color: @light-orange;

    &.function, &.class {
      color: magenta;
    }
  }
}

.constant {
  color: magenta;

  &.preprocessor {
    color: magenta;
  }

  &.character.escape {
    color: magenta;
  }

  &.numeric {
    color: @blue;
  }

  &.other.rgb-value {
    color: magenta;
  }

  &.other.color {
    color: magenta;
  }

  &.other.symbol {
    color: magenta;
  }
}

.variable {
  color: @syntax-text-color;

  &.interpolation {
    color: magenta;
  }

  &.parameter.function {
    color: @syntax-text-color;
  }
}

.invalid.illegal {
  background-color: @light-red;
  color: @syntax-background-color;
}

.string {
  color: @lime-green;

  &.regexp {
      color: @light-red;

    .source.ruby.embedded {
      color: @dark-orange;
    }
  }

  &.other.link {
    color: @light-red;
  }
}

.source {
    &.gfm .markup {
        -webkit-font-smoothing: auto;
        &.heading {
            color: @green;
        }
    }

    & .punctuation.definition.entity {
        color: @keyword;
    }

    &.ini {
        color: @medium-blue;
    }

    & .punctuation {
        color: @syntax-text-color;
    }
}

.support {
  &.class {
    color: magenta;
  }

  &.function  {
    color: @syntax-text-color;

    &.any-method {
      color: @keyword;
    }
  }

  &.constant {
    color: @syntax-text-color;
  }
}

.entity {
  &.name {
  }

  &.name.class, &.name.type, &.name.type.class {
    color: @light-orange;
  }

  &.name.section {
    color: @dark-orange;
  }

  &.name.tag {
    color: @dark-orange;
  }

  &.other.attribute-name {
    color: @dark-orange;

    &.class {
      color: @light-orange;
    }
  }
}

.meta {
  color: @syntax-text-color;

  &.id {
    color: magenta;
  }

  &.class {
    color: @syntax-text-color;

    &.body {
      color: @syntax-text-color;
    }

    &.punctuation {
      color: magenta;
    }
  }

  &.return-type {
    color: @light-orange;
  }

  &.link {
    color: @dark-orange;
  }

  &.require {
    color: @blue;
  }

  &.selector {
    color: @brick-red;
  }

  &.separator {
    background-color: @syntax-background-color;
    color: @syntax-text-color;
  }
}

.none {
  color: @syntax-text-color;
}

.markup {
  &.bold {
    color: @dark-orange;
    font-style: bold;
  }

  &.changed {
    color: @brick-red;
  }

  &.deleted {
    color: @light-red;
  }

  &.italic {
    color: @brick-red;
    font-style: italic;
  }

  &.heading .punctuation.definition.heading {
    color: @blue;
  }

  &.inserted {
    color: @green;
  }

  &.list {
    color: @light-red;
  }

  &.quote {
    color: @dark-orange;
  }

  &.raw.inline {
    color: @green;
  }
}

.punctuation {
    &.class {
        color: @syntax-text-color;
    }
    &.definition {
        &.comment {
            color: @green;
            font-style: italic;
            font-weight: bold;
        }

        &.keyword {
            color: @keyword;
        }

        &.string {
            color: @lime-green;
        }

        &.variable,
        &.parameters,
        &.array {
            color: @syntax-text-color;
        }

        &.heading,
        &.identity {
            color: magenta;
        }

        &.bold {
            color: @light-orange;
            font-style: bold;
        }

        &.italic {
            color: @brick-red;
            font-style: italic;
        }
    }

    &.section.embedded {
        color: darken(@light-red, 10%);
    }
}
